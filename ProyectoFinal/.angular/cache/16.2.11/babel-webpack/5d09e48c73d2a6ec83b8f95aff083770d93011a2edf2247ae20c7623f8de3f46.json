{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, router, authService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.authService = authService;\n    this.loginForm = this.formBuilder.group({\n      usuario: ['', Validators.required],\n      contras: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      // Aquí llamarías a tu servicio de autenticación y, después de un inicio de sesión exitoso:\n      this.router.navigate(['/paginas/inicio']); // Redirige al usuario a la página de inicio\n    }\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","formBuilder","router","authService","loginForm","group","usuario","required","contras","onSubmit","valid","console","log","value","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router'; // Importa Router\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService: AuthService) { // Inyecta Router aquí\n    this.loginForm = this.formBuilder.group({\n      usuario: ['', Validators.required],\n      contras: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      // Aquí llamarías a tu servicio de autenticación y, después de un inicio de sesión exitoso:\n      this.router.navigate(['/paginas/inicio']); // Redirige al usuario a la página de inicio\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,WAAwB;IAAlF,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IACvF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAClCC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KAClC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC;MACjC;MACA,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAE/C;CACD;;AAjBYf,cAAc,GAAAgB,UAAA,EAL1BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWnB,cAAc,CAiB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}