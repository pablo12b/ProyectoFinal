{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProductoComponent = class ProductoComponent {\n  constructor(productosService, authService) {\n    this.productosService = productosService;\n    this.authService = authService;\n    this.productos = [];\n    this.paginaActual = 1;\n    this.productosPorPagina = 20; // 5 columnas x 4 filas\n  }\n\n  ngOnInit() {\n    this.productosService.getProductos().subscribe(productos => {\n      // Hacer una copia del array de productos para no mutar el original\n      this.productos = [...productos];\n    }, error => {\n      console.error('Error al obtener productos', error);\n    });\n  }\n  ordenar(tipo) {\n    let productosOrdenados = [...this.productos];\n    if (tipo === 'precioAsc') {\n      productosOrdenados.sort((a, b) => (a.precio ?? 0) - (b.precio ?? 0));\n    } else if (tipo === 'precioDesc') {\n      productosOrdenados.sort((a, b) => (b.precio ?? 0) - (a.precio ?? 0));\n    } else if (tipo === 'alfabetico') {\n      productosOrdenados.sort((a, b) => (a.nombre ?? \"\").localeCompare(b.nombre ?? \"\"));\n    }\n    this.productos = productosOrdenados;\n  }\n  totalPaginas() {\n    return Math.ceil(this.productos.length / this.productosPorPagina);\n  }\n  siguientePagina() {\n    if (this.paginaActual < this.totalPaginas()) {\n      this.paginaActual++;\n    }\n  }\n  anteriorPagina() {\n    if (this.paginaActual > 1) {\n      this.paginaActual--;\n    }\n  }\n  irAPagina(num) {\n    this.paginaActual = num;\n  }\n  // Función para crear un array de números de páginas para el *ngFor del paginador\n  obtenerNumerosDePagina() {\n    return Array(this.totalPaginas()).fill(0).map((x, i) => i + 1);\n  }\n  agregarAlCarrito(pro) {\n    this.productosService.addToCart(pro).subscribe(response => {\n      console.log('Producto agregado al carrito', response);\n      // Aquí podrías redirigir al usuario al carrito o mostrar un mensaje de éxito.\n    }, error => {\n      console.error('Error al agregar el producto al carrito', error);\n    });\n  }\n};\nProductoComponent = __decorate([Component({\n  selector: 'app-producto',\n  templateUrl: './producto.component.html',\n  styleUrls: ['./producto.component.css']\n})], ProductoComponent);","map":{"version":3,"names":["Component","ProductoComponent","constructor","productosService","authService","productos","paginaActual","productosPorPagina","ngOnInit","getProductos","subscribe","error","console","ordenar","tipo","productosOrdenados","sort","a","b","precio","nombre","localeCompare","totalPaginas","Math","ceil","length","siguientePagina","anteriorPagina","irAPagina","num","obtenerNumerosDePagina","Array","fill","map","x","i","agregarAlCarrito","pro","addToCart","response","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\producto\\producto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductosService } from '../services/productos.service';\nimport { Producto } from 'src/app/domain/producto';\n\n@Component({\n  selector: 'app-producto',\n  templateUrl: './producto.component.html',\n  styleUrls: ['./producto.component.css']\n})\nexport class ProductoComponent implements OnInit{\n  productos: any[]=[];\n  paginaActual: number = 1;\n  productosPorPagina: number = 20; // 5 columnas x 4 filas\n\n  constructor(private productosService: ProductosService, private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.productosService.getProductos().subscribe(\n      (productos) => {\n        // Hacer una copia del array de productos para no mutar el original\n        this.productos = [...productos];\n      },\n      (error) => {\n        console.error('Error al obtener productos', error);\n      }\n    );\n  }\n\n  ordenar(tipo: string) {\n    let productosOrdenados = [...this.productos];\n    if (tipo === 'precioAsc') {\n      productosOrdenados.sort((a, b) => (a.precio ?? 0) - (b.precio ?? 0));\n    } else if (tipo === 'precioDesc') {\n      productosOrdenados.sort((a, b) => (b.precio ?? 0) - (a.precio ?? 0));\n    } else if (tipo === 'alfabetico') {\n      productosOrdenados.sort((a, b) => (a.nombre ?? \"\").localeCompare(b.nombre ?? \"\"));\n    }\n    this.productos = productosOrdenados;\n  }\n\n  totalPaginas(): number {\n    return Math.ceil(this.productos.length / this.productosPorPagina);\n  }\n\n  siguientePagina(): void {\n    if (this.paginaActual < this.totalPaginas()) {\n      this.paginaActual++;\n    }\n  }\n\n  anteriorPagina(): void {\n    if (this.paginaActual > 1) {\n      this.paginaActual--;\n    }\n  }\n\n  irAPagina(num: number): void {\n    this.paginaActual = num;\n  }\n  \n  \n  // Función para crear un array de números de páginas para el *ngFor del paginador\n  obtenerNumerosDePagina(): number[] {\n    return Array(this.totalPaginas()).fill(0).map((x, i) => i + 1);\n  }\n  \n  agregarAlCarrito(pro: Producto){\n    this.productosService.addToCart(pro).subscribe(\n      response => {\n        console.log('Producto agregado al carrito', response);\n        // Aquí podrías redirigir al usuario al carrito o mostrar un mensaje de éxito.\n      },\n      error => {\n        console.error('Error al agregar el producto al carrito', error);\n      }\n    );\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}