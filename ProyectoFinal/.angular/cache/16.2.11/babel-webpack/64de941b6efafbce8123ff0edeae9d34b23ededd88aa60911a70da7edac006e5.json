{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.clienteId = null;\n  }\n  // Método para establecer el ID del cliente en el contexto actual\n  setClienteId(id) {\n    this.clienteId = id;\n  }\n  // Método para obtener el ID del cliente en el contexto actual\n  getClienteId() {\n    return this.clienteId;\n  }\n  // Método para limpiar la información del cliente en el contexto actual\n  clearClienteId() {\n    this.clienteId = null;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","clienteId","setClienteId","id","getClienteId","clearClienteId","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cliente } from 'src/app/domain/cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private clienteId: number | null = null;\n\n  // Método para establecer el ID del cliente en el contexto actual\n  setClienteId(id: number): void {\n    this.clienteId = id;\n  }\n\n  // Método para obtener el ID del cliente en el contexto actual\n  getClienteId(): number | null {\n    return this.clienteId;\n  }\n\n  // Método para limpiar la información del cliente en el contexto actual\n  clearClienteId(): void {\n    this.clienteId = null;\n  }\n}\n\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIU,KAAAC,SAAS,GAAkB,IAAI;;EAEvC;EACAC,YAAYA,CAACC,EAAU;IACrB,IAAI,CAACF,SAAS,GAAGE,EAAE;EACrB;EAEA;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,SAAS;EACvB;EAEA;EACAI,cAAcA,CAAA;IACZ,IAAI,CAACJ,SAAS,GAAG,IAAI;EACvB;EAAC,QAAAK,CAAA,G;qBAhBUP,WAAW;EAAA;EAAA,QAAAQ,EAAA,G;WAAXR,WAAW;IAAAS,OAAA,EAAXT,WAAW,CAAAU,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}