{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {}\n  // Método para establecer el usuario actual\n  setCurrentUser(cliente) {\n    localStorage.setItem('currentUser', JSON.stringify(cliente));\n    console.log(cliente);\n  }\n  setDNI(dni) {\n    localStorage.setItem('dni', JSON.stringify(dni));\n    console.log(dni);\n  }\n  // Método para obtener el usuario actual\n  getCurrentUser() {\n    const clienteJSON = localStorage.getItem('currentUser');\n    if (clienteJSON) {\n      return JSON.parse(clienteJSON);\n    }\n    return null;\n  }\n  getDNI() {\n    const clienteJSON = localStorage.getItem('dni');\n    if (clienteJSON) {\n      return JSON.parse(clienteJSON);\n    }\n    return null;\n  }\n  setUsuarioAutenticado(usuario) {\n    this.usuarioAutenticado = usuario;\n  }\n  // Método para obtener el usuario autenticado\n  getUsuarioAutenticado() {\n    return this.usuarioAutenticado;\n  }\n  // Método para eliminar el usuario actual de la sesión\n  clearCurrentUser() {\n    localStorage.removeItem('currentUser');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","setCurrentUser","cliente","localStorage","setItem","JSON","stringify","console","log","setDNI","dni","getCurrentUser","clienteJSON","getItem","parse","getDNI","setUsuarioAutenticado","usuario","usuarioAutenticado","getUsuarioAutenticado","clearCurrentUser","removeItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cliente } from 'src/app/domain/cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private usuarioAutenticado : any\n  constructor() {}\n\n  // Método para establecer el usuario actual\n  setCurrentUser(cliente: Cliente): void {\n    localStorage.setItem('currentUser', JSON.stringify(cliente));\n    console.log(cliente)\n  }\n\n  setDNI(dni: string): void {\n    localStorage.setItem('dni', JSON.stringify(dni));\n    console.log(dni)\n  }\n  \n  // Método para obtener el usuario actual\n  getCurrentUser(): Cliente | null {\n    const clienteJSON = localStorage.getItem('currentUser');\n    if (clienteJSON) {\n      return JSON.parse(clienteJSON);\n    }\n    return null;\n  }\n  getDNI(): string | null {\n    const clienteJSON = localStorage.getItem('dni');\n    if (clienteJSON) {\n      return JSON.parse(clienteJSON);\n    }\n    return null;\n  }\n\n  setUsuarioAutenticado(usuario: any) {\n    this.usuarioAutenticado = usuario;\n  }\n\n  // Método para obtener el usuario autenticado\n  getUsuarioAutenticado() {\n    return this.usuarioAutenticado;\n  }\n  // Método para eliminar el usuario actual de la sesión\n  clearCurrentUser(): void {\n    localStorage.removeItem('currentUser');\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAA,GAAe;EAEf;EACAC,cAAcA,CAACC,OAAgB;IAC7BC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;IAC5DK,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACtB;EAEAO,MAAMA,CAACC,GAAW;IAChBP,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC,CAAC;IAChDH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;EAClB;EAEA;EACAC,cAAcA,CAAA;IACZ,MAAMC,WAAW,GAAGT,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC;IACvD,IAAID,WAAW,EAAE;MACf,OAAOP,IAAI,CAACS,KAAK,CAACF,WAAW,CAAC;;IAEhC,OAAO,IAAI;EACb;EACAG,MAAMA,CAAA;IACJ,MAAMH,WAAW,GAAGT,YAAY,CAACU,OAAO,CAAC,KAAK,CAAC;IAC/C,IAAID,WAAW,EAAE;MACf,OAAOP,IAAI,CAACS,KAAK,CAACF,WAAW,CAAC;;IAEhC,OAAO,IAAI;EACb;EAEAI,qBAAqBA,CAACC,OAAY;IAChC,IAAI,CAACC,kBAAkB,GAAGD,OAAO;EACnC;EAEA;EACAE,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACD,kBAAkB;EAChC;EACA;EACAE,gBAAgBA,CAAA;IACdjB,YAAY,CAACkB,UAAU,CAAC,aAAa,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBA1CUvB,WAAW;EAAA;EAAA,QAAAwB,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}