{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {}\n  // Método para establecer el usuario actual\n  setCurrentUser(cliente) {\n    this.currentUser = user;\n    localStorage.setItem('currentUser', user);\n  }\n  getCurrentUser() {\n    return this.currentUser || localStorage.getItem('currentUser');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","setCurrentUser","cliente","currentUser","user","localStorage","setItem","getCurrentUser","getItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cliente } from 'src/app/domain/cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUser: Cliente; // Reemplaza 'any' con tu tipo de datos de usuario, si lo tienes\n\n  constructor() {}\n\n  // Método para establecer el usuario actual\n  setCurrentUser(cliente: Cliente) {\n    this.currentUser = user;\n    localStorage.setItem('currentUser', user);\n  }\n  \n  getCurrentUser() {\n    return this.currentUser || localStorage.getItem('currentUser');\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAItBC,YAAA,GAAe;EAEf;EACAC,cAAcA,CAACC,OAAgB;IAC7B,IAAI,CAACC,WAAW,GAAGC,IAAI;IACvBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEF,IAAI,CAAC;EAC3C;EAEAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,WAAW,IAAIE,YAAY,CAACG,OAAO,CAAC,aAAa,CAAC;EAChE;EAAC,QAAAC,CAAA,G;qBAdUV,WAAW;EAAA;EAAA,QAAAW,EAAA,G;WAAXX,WAAW;IAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}