{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    // Al inicializar el servicio, intenta cargar el usuario autenticado desde localStorage\n    this.usuarioAutenticado = JSON.parse(localStorage.getItem('currentUser')) || null;\n  }\n  // Método para establecer el usuario autenticado y guardarlo en localStorage\n  setUsuarioAutenticado(usuario) {\n    this.usuarioAutenticado = usuario;\n    localStorage.setItem('currentUser', JSON.stringify(usuario));\n  }\n  // Método para obtener el usuario autenticado\n  getUsuarioAutenticado() {\n    return this.usuarioAutenticado;\n  }\n  // Método para eliminar el usuario actual de la sesión y de localStorage\n  clearCurrentUser() {\n    this.usuarioAutenticado = null;\n    localStorage.removeItem('currentUser');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","usuarioAutenticado","JSON","parse","localStorage","getItem","setUsuarioAutenticado","usuario","setItem","stringify","getUsuarioAutenticado","clearCurrentUser","removeItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cliente } from 'src/app/domain/cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private usuarioAutenticado: any;\n\n  constructor() {\n    // Al inicializar el servicio, intenta cargar el usuario autenticado desde localStorage\n    this.usuarioAutenticado = JSON.parse(localStorage.getItem('currentUser')) || null;\n  }\n\n  // Método para establecer el usuario autenticado y guardarlo en localStorage\n  setUsuarioAutenticado(usuario: any) {\n    this.usuarioAutenticado = usuario;\n    localStorage.setItem('currentUser', JSON.stringify(usuario));\n  }\n\n  // Método para obtener el usuario autenticado\n  getUsuarioAutenticado() {\n    return this.usuarioAutenticado;\n  }\n\n  // Método para eliminar el usuario actual de la sesión y de localStorage\n  clearCurrentUser(): void {\n    this.usuarioAutenticado = null;\n    localStorage.removeItem('currentUser');\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAGtBC,YAAA;IACE;IACA,IAAI,CAACC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,IAAI;EACnF;EAEA;EACAC,qBAAqBA,CAACC,OAAY;IAChC,IAAI,CAACN,kBAAkB,GAAGM,OAAO;IACjCH,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEN,IAAI,CAACO,SAAS,CAACF,OAAO,CAAC,CAAC;EAC9D;EAEA;EACAG,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACT,kBAAkB;EAChC;EAEA;EACAU,gBAAgBA,CAAA;IACd,IAAI,CAACV,kBAAkB,GAAG,IAAI;IAC9BG,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAvBUd,WAAW;EAAA;EAAA,QAAAe,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}