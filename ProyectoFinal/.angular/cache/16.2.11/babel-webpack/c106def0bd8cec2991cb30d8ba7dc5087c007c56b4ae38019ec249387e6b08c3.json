{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CarritoComponent = class CarritoComponent {\n  constructor(tuServicio) {\n    this.tuServicio = tuServicio;\n    this.productos = []; // Un array para almacenar los productos\n  } // Inyecta tu servicio aquí\n  ngOnInit() {\n    this.cargarProductos();\n  }\n  cargarProductos() {\n    this.tuServicio.getCarrito().subscribe(response => {\n      if (Array.isArray(response)) {\n        this.productos = response;\n      } else {\n        console.log(response.mensaje); // Manejar el caso de carrito vacío o mensaje del servidor\n      }\n    }, error => {\n      console.error('Error al obtener los productos', error);\n    });\n  }\n};\nCarritoComponent = __decorate([Component({\n  selector: 'app-carrito',\n  templateUrl: './carrito.component.html',\n  styleUrls: ['./carrito.component.css']\n})], CarritoComponent);","map":{"version":3,"names":["Component","CarritoComponent","constructor","tuServicio","productos","ngOnInit","cargarProductos","getCarrito","subscribe","response","Array","isArray","console","log","mensaje","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\carrito\\carrito.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductosService } from '../services/productos.service';\nimport { Producto } from 'src/app/domain/producto';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-carrito',\n  templateUrl: './carrito.component.html',\n  styleUrls: ['./carrito.component.css']\n})\nexport class CarritoComponent implements OnInit {\n  productos: Producto[] = []; // Un array para almacenar los productos\n\n  constructor(private tuServicio: TuServicio) { } // Inyecta tu servicio aquí\n\n  ngOnInit(): void {\n    this.cargarProductos();\n  }\n\n  cargarProductos(): void {\n    this.tuServicio.getCarrito().subscribe(\n      (response: Producto[] | { mensaje: string }) => {\n        if (Array.isArray(response)) {\n          this.productos = response;\n        } else {\n          console.log(response.mensaje); // Manejar el caso de carrito vacío o mensaje del servidor\n        }\n      },\n      error => {\n        console.error('Error al obtener los productos', error);\n      }\n    );\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAG3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,SAAS,GAAe,EAAE,CAAC,CAAC;EAEkB,CAAC,CAAC;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACH,UAAU,CAACI,UAAU,EAAE,CAACC,SAAS,CACnCC,QAA0C,IAAI;MAC7C,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACL,SAAS,GAAGK,QAAQ;OAC1B,MAAM;QACLG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC;;IAEnC,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACH;CACD;AAvBYd,gBAAgB,GAAAe,UAAA,EAL5BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWlB,gBAAgB,CAuB5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}