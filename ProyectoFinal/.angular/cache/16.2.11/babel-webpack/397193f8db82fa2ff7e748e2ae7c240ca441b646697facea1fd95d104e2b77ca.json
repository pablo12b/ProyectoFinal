{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  setUsuarioAutenticado(usuario) {\n    this.usuarioAutenticado = usuario;\n  }\n  // Método para obtener el usuario autenticado\n  getUsuarioAutenticado() {\n    return this.usuarioAutenticado;\n  }\n  // Método para verificar si el usuario está autenticado\n  estaAutenticado() {\n    return !!this.usuarioAutenticado;\n  }\n  cerrarSesion() {\n    return this.usuarioAutenticado = null;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","setUsuarioAutenticado","usuario","usuarioAutenticado","getUsuarioAutenticado","estaAutenticado","cerrarSesion","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, throwError } from 'rxjs';\nimport { Cliente } from 'src/app/domain/cliente';\nimport { environment } from 'src/app/enviroment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private usuarioAutenticado : any\n    constructor(private http: HttpClient) {}\n\n  setUsuarioAutenticado(usuario: any) {\n    this.usuarioAutenticado = usuario;\n  }\n\n  // Método para obtener el usuario autenticado\n  getUsuarioAutenticado() {\n    return this.usuarioAutenticado;\n  }\n\n  // Método para verificar si el usuario está autenticado\n  estaAutenticado(): boolean {\n    return !!this.usuarioAutenticado;\n  }\n\n  cerrarSesion(){\n    return this.usuarioAutenticado =null\n  }\n}\n\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEzCC,qBAAqBA,CAACC,OAAY;IAChC,IAAI,CAACC,kBAAkB,GAAGD,OAAO;EACnC;EAEA;EACAE,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACD,kBAAkB;EAChC;EAEA;EACAE,eAAeA,CAAA;IACb,OAAO,CAAC,CAAC,IAAI,CAACF,kBAAkB;EAClC;EAEAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,kBAAkB,GAAE,IAAI;EACtC;EAAC,QAAAI,CAAA,G;qBApBUT,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}