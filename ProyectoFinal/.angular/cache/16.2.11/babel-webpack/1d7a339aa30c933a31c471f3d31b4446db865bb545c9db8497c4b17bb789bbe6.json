{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CarritoComponent = class CarritoComponent {\n  constructor(carritosService) {\n    this.carritosService = carritosService;\n  } // Inyecta tu servicio aquí\n  ngOnInit() {\n    this.carritosService.getCarritos().subscribe(response => {\n      if (Array.isArray(response)) {\n        this.carritos = response;\n      } else {\n        console.error('Se esperaba un array, se recibió:', response);\n        // Aquí podrías manejar la situación, por ejemplo mostrando un mensaje de que el carrito está vacío.\n      }\n    }, error => {\n      console.error('Error al obtener los productos', error);\n    });\n  }\n};\nCarritoComponent = __decorate([Component({\n  selector: 'app-carrito',\n  templateUrl: './carrito.component.html',\n  styleUrls: ['./carrito.component.css']\n})], CarritoComponent);","map":{"version":3,"names":["Component","CarritoComponent","constructor","carritosService","ngOnInit","getCarritos","subscribe","response","Array","isArray","carritos","console","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\ProyectoFinal\\ProyectoFinal\\src\\app\\pages\\carrito\\carrito.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductosService } from '../services/productos.service';\nimport { Producto } from 'src/app/domain/producto';\nimport { Observable } from 'rxjs';\nimport { CarritoService } from '../services/carrito.service';\n\n@Component({\n  selector: 'app-carrito',\n  templateUrl: './carrito.component.html',\n  styleUrls: ['./carrito.component.css']\n})\nexport class CarritoComponent implements OnInit {\n  carritos: any// Un array para almacenar los productos\n\n  constructor(private carritosService: CarritoService) { } // Inyecta tu servicio aquí\n\n  ngOnInit(): void {\n    this.carritosService.getCarritos().subscribe(\n      (response: any) => { // Cambiar a 'any' si la respuesta puede no ser un Producto[]\n        if (Array.isArray(response)) {\n          this.carritos = response;\n        } else {\n          console.error('Se esperaba un array, se recibió:', response);\n          // Aquí podrías manejar la situación, por ejemplo mostrando un mensaje de que el carrito está vacío.\n        }\n      },\n      (error) => {\n        console.error('Error al obtener los productos', error);\n      }\n    );\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAG3BC,YAAoBC,eAA+B;IAA/B,KAAAA,eAAe,GAAfA,eAAe;EAAoB,CAAC,CAAC;EAEzDC,QAAQA,CAAA;IACN,IAAI,CAACD,eAAe,CAACE,WAAW,EAAE,CAACC,SAAS,CACzCC,QAAa,IAAI;MAChB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACG,QAAQ,GAAGH,QAAQ;OACzB,MAAM;QACLI,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEL,QAAQ,CAAC;QAC5D;;IAEJ,CAAC,EACAK,KAAK,IAAI;MACRD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACH;CACD;AApBYX,gBAAgB,GAAAY,UAAA,EAL5Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWf,gBAAgB,CAoB5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}